package hw;

public class Demo {
    /**
     * 题目一】相同数字的积木游戏
     * 小华和小薇一起通过玩积木游戏学习数学。
     * 他们有很多积木，每个积木块上都有一个数字，积木块上的数字可能相同。
     * 小华随机拿一些积木挨着排成一排，请小薇找到这排积木中数字相同且所处位置最远的2块积木块，计算他们的距离。
     * 小薇请你帮忙替解决这个问题。
     *
     * 输入描述：
     * 第一行输入为N，表示小华排成一排的积木总数。
     * 接下来N行每行一个数字，表示小华排成一排的积木上数字。
     *
     * 输出描述：
     * 相同数字的积木的位置最远距离。
     * 如果所有积木数字都不相同，请返回-1
     *
     * 示例1
     * 输入：5
     *             1
     *             2
     *             3
     *             1
     *             4
     * 输出：3
     *
     * 示例2
     * 输入：2
     *             1
     *             2
     * 输出：-1
     *
     *
     *
     * 【题目二】猜字谜
     * 小王设计了一个简单的猜字谜游戏，游戏的谜面是一个错误的单词，比如nesw，玩家需要猜出谜底库中正确的单词。猜中的要求如下：
     * 对于某个谜面和谜底单词，满足下面任一条件都表示猜中：
     * 1.变换顺序以后一样的，比如通过变换w和e的顺序，“nwes”和“news”是可以完全对应的
     * 2.字母去重以后是一样的，比如“woood”和“wood”是一样的，它们去重后都是“wod”
     * 请你写出一个程序帮忙在谜底库中找到正确的谜底。谜面是多个单词，都需要找到对应的谜底，如果找不到的话，返回“not found”
     *
     * 输入描述：
     * 1.谜面单词列表，以“,”分隔
     * 2.谜底库单词列表，以“,”分隔
     *
     * 输出描述：匹配到的正确单词列表，，以“,”分隔，如果找不到的话，返回“not found”
     *
     * 示例1
     * 输入：connection
     *             connection,today
     * 输出：connection
     *
     * 示例2
     * 输入：bdni,woood
     *             bind,wrong,wood
     * 输出：bind,wood
     *
     *
     *
     *
     * 【题目三】最优资源分配
     * 某块业务芯片最小容量单位为1.25G，总容量为M*1.25G，对该芯片资源编号为1,2,.…..,M。该芯片支持3种不同的配置，分别为A、B、C。
     *
     * 配置A：占总容量为1.25*1=1.25G
     * 配置B：占总容量为1.25*2=2.5G
     * 配置C：占总容量为1.25*8=10G
     *
     * 某块板卡上集成了N块上述芯片，对芯片编号为1,2,.…..,N，各个芯片之间彼此独立，不能垮芯片占用资源。给定板卡上芯片数量N、每块芯片容量M、用户按次序配置后，请输出芯片资源占用情况，保证消耗的芯片数量最少。
     *
     * 资源分配规则：按照芯片编号从小到大分配所需资源，芯片上资源如果被占用标记为1，没有被占用标记为0。
     * 用户配置序列：用户配置是按次序依次配置到芯片中，如果用户配置序列中某个配置超过了芯片容量，丢弃该配置，继续遍历用户后续配置。
     *
     * 输入描述：
     * M：每块芯片容量为M*1.25G，取值范围1~256
     * N：每块板卡包含芯片数量，取值范围为1~32
     * 用户配置序列，例如ACABA，长度不超过1000
     *
     * 输出描述：
     * 板卡上每块芯片的占用情况
     *
     * 补充说明：
     * 用户配置是按照次序依次配置到芯片中，如果用户配置序列中某个配置超过了芯片总容量，丢弃该配置，继续遍历用户后续配置。
     *
     * 示例1
     * 输入：8
     *             2
     *             ACABA
     * 输出：11111000
     *             11111111
     *
     * 示例1
     * 输入：8
     *             2
     *             ACBCB
     * 输出：11111000
     *             11111111
     */
}
